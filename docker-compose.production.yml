version: '3.8'

services:
  # SAAM Core Services
  saam-mcp:
    build: .
    command: python -m src.main --module mcp
    ports:
      - "8000:8000"
    environment:
      - SAAM_ENV=production
      - RABBITMQ_HOST=rabbitmq
      - DB_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      - rabbitmq
      - postgres
      - redis
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  saam-met:
    build: .
    command: python -m src.main --module met  
    ports:
      - "8001:8001"
    environment:
      - SAAM_ENV=production
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - rabbitmq
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  saam-sm3:
    build: .
    command: python -m src.main --module sm3
    environment:
      - SAAM_ENV=production
      - DB_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  saam-mao:
    build: .
    command: python -m src.main --module mao
    environment:
      - SAAM_ENV=production
      - RABBITMQ_HOST=rabbitmq
      - DB_HOST=postgres
    depends_on:
      - rabbitmq
      - postgres
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  # Infrastructure Services
  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=saam
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=saam
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=saam
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  rabbitmq_data:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: